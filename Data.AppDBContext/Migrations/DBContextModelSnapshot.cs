// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "cf06aabe-df44-4c17-8de4-f87368733656",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(5730),
                            Name = "Ride The Lightning",
                            PerformerId = "3b785329-f8f5-4a34-a92a-7f7c22d6bfa9",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "7e5f4498-51a7-4653-85ae-39ba39d449e1",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(5818),
                            Name = "Master Of Puppets",
                            PerformerId = "3b785329-f8f5-4a34-a92a-7f7c22d6bfa9",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "7a63fdb1-fa1c-4dce-a683-002b5da32997",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(5829),
                            Name = "Fear Of The Dark",
                            PerformerId = "666ca2a8-87db-488b-8432-05a748353866",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "13e5d71d-5d4d-4f8c-8181-afba15f9ff60",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(5835),
                            Name = "Meteora",
                            PerformerId = "878d9df9-1f37-4c6e-9a6a-fc8ac94a91ce",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "7a5bbdde-adb9-487c-bb3e-af54826bb752",
                            AlbumId = "cf06aabe-df44-4c17-8de4-f87368733656",
                            GenreId = "db9aba26-0d2c-4fcf-92a8-78a81bad748c"
                        },
                        new
                        {
                            Id = "747c6dcd-9882-45f9-ac92-fc24d334c91d",
                            AlbumId = "7e5f4498-51a7-4653-85ae-39ba39d449e1",
                            GenreId = "d4b0affc-615a-4ca1-8933-6d04584019ce"
                        },
                        new
                        {
                            Id = "f9049eab-121b-4828-998a-5dc47df6c2f4",
                            AlbumId = "7a63fdb1-fa1c-4dce-a683-002b5da32997",
                            GenreId = "db9aba26-0d2c-4fcf-92a8-78a81bad748c"
                        },
                        new
                        {
                            Id = "515206fb-d9a8-44a0-a21a-fbb6d28bf966",
                            AlbumId = "13e5d71d-5d4d-4f8c-8181-afba15f9ff60",
                            GenreId = "905f4e81-d987-4191-83a3-058de3c625df"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "00cbc946-d767-4ca1-9709-fd71167d4e27",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(68),
                            SongId = "3ac613a3-0f5a-4db0-9189-ac1c3abfa233",
                            UserId = "af0a8556-16d5-4507-a9a2-34fe0143baec"
                        },
                        new
                        {
                            Id = "2ee10990-88a9-448f-b664-526682fee45c",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(129),
                            SongId = "3ac613a3-0f5a-4db0-9189-ac1c3abfa233",
                            UserId = "9ae35ab3-9f1c-40fa-beb6-20b85a99e604"
                        },
                        new
                        {
                            Id = "2cf07b27-434b-4c7d-9950-525951c70c71",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(136),
                            SongId = "f534b3d2-f7fc-44dc-9d39-79c021aca648",
                            UserId = "af0a8556-16d5-4507-a9a2-34fe0143baec"
                        },
                        new
                        {
                            Id = "3a68141a-c949-418b-bb73-8e797fc3ab32",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(143),
                            SongId = "f534b3d2-f7fc-44dc-9d39-79c021aca648",
                            UserId = "aabbc4a5-bf07-4024-b419-6c3fee7f5b02"
                        },
                        new
                        {
                            Id = "0ca61a4b-bd0d-4e53-be32-03b160d16bfa",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(174),
                            SongId = "60067218-4fd7-487a-b082-3cbcf4f3be42",
                            UserId = "9ae35ab3-9f1c-40fa-beb6-20b85a99e604"
                        },
                        new
                        {
                            Id = "6818cef8-16f7-4aa5-a027-ae1956fcb882",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(187),
                            SongId = "dbac09c9-282f-46a9-a5d9-3d8c31c93014",
                            UserId = "af0a8556-16d5-4507-a9a2-34fe0143baec"
                        },
                        new
                        {
                            Id = "b44b9d7e-83ab-4d49-8d0c-61f920aeb85b",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(194),
                            SongId = "dbac09c9-282f-46a9-a5d9-3d8c31c93014",
                            UserId = "9ae35ab3-9f1c-40fa-beb6-20b85a99e604"
                        },
                        new
                        {
                            Id = "4398d8e7-9942-4d82-bfb7-a0fbf219ab50",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 547, DateTimeKind.Local).AddTicks(198),
                            SongId = "dbac09c9-282f-46a9-a5d9-3d8c31c93014",
                            UserId = "aabbc4a5-bf07-4024-b419-6c3fee7f5b02"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "db9aba26-0d2c-4fcf-92a8-78a81bad748c",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(7532),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "905f4e81-d987-4191-83a3-058de3c625df",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(7590),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "d4b0affc-615a-4ca1-8933-6d04584019ce",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(7600),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "3b785329-f8f5-4a34-a92a-7f7c22d6bfa9",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(4272),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "666ca2a8-87db-488b-8432-05a748353866",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(4337),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "878d9df9-1f37-4c6e-9a6a-fc8ac94a91ce",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(4347),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "3ac613a3-0f5a-4db0-9189-ac1c3abfa233",
                            AlbumId = "7e5f4498-51a7-4653-85ae-39ba39d449e1",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(6853),
                            Name = "Master Of Puppets",
                            PerformerId = "3b785329-f8f5-4a34-a92a-7f7c22d6bfa9"
                        },
                        new
                        {
                            Id = "f534b3d2-f7fc-44dc-9d39-79c021aca648",
                            AlbumId = "13e5d71d-5d4d-4f8c-8181-afba15f9ff60",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(6924),
                            Name = "Numb",
                            PerformerId = "878d9df9-1f37-4c6e-9a6a-fc8ac94a91ce"
                        },
                        new
                        {
                            Id = "60067218-4fd7-487a-b082-3cbcf4f3be42",
                            AlbumId = "7a63fdb1-fa1c-4dce-a683-002b5da32997",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(6935),
                            Name = "Fear Of The Dark",
                            PerformerId = "666ca2a8-87db-488b-8432-05a748353866"
                        },
                        new
                        {
                            Id = "dbac09c9-282f-46a9-a5d9-3d8c31c93014",
                            AlbumId = "cf06aabe-df44-4c17-8de4-f87368733656",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(6941),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "3b785329-f8f5-4a34-a92a-7f7c22d6bfa9"
                        },
                        new
                        {
                            Id = "35389162-504a-4e81-81bc-50b4a0351693",
                            AlbumId = "7e5f4498-51a7-4653-85ae-39ba39d449e1",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(6955),
                            Name = "Battery",
                            PerformerId = "3b785329-f8f5-4a34-a92a-7f7c22d6bfa9"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "af0a8556-16d5-4507-a9a2-34fe0143baec",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 544, DateTimeKind.Local).AddTicks(5577),
                            Email = "george@123.bg",
                            Password = "123",
                            Username = "George"
                        },
                        new
                        {
                            Id = "9ae35ab3-9f1c-40fa-beb6-20b85a99e604",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(2832),
                            Email = "martin@123.bg",
                            Password = "123",
                            Username = "Martin"
                        },
                        new
                        {
                            Id = "aabbc4a5-bf07-4024-b419-6c3fee7f5b02",
                            CreatedAt = new DateTime(2020, 12, 20, 14, 58, 10, 546, DateTimeKind.Local).AddTicks(3033),
                            Email = "jake@123.bg",
                            Password = "123",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
