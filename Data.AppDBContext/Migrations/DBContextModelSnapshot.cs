// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "0054ad40-5aee-4420-b94b-da257981e7a0",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(8812),
                            Name = "Ride The Lightning",
                            PerformerId = "86292c5a-2331-4ee0-9076-cf0e2323847b",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "cd361a62-fce0-41c1-a4d6-906e9600ccbb",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(8921),
                            Name = "Master Of Puppets",
                            PerformerId = "86292c5a-2331-4ee0-9076-cf0e2323847b",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "41d85d5c-81b5-4033-9ea4-fffefe0e24e2",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(8959),
                            Name = "Fear Of The Dark",
                            PerformerId = "98a79188-3617-4f77-82ce-e9a3204fa2e3",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "aeae8940-f8dc-443b-af63-d33301ea2be7",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(8966),
                            Name = "Meteora",
                            PerformerId = "804f6d10-cf80-4c1b-a634-4dc0bbd83dcc",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "6e6b5705-00af-4b40-b56d-791da2b10c6f",
                            AlbumId = "0054ad40-5aee-4420-b94b-da257981e7a0",
                            GenreId = "67aa5ef1-eff1-4c62-bc73-94e6e5978ec1"
                        },
                        new
                        {
                            Id = "4f413c55-9585-4f34-9a75-b1c117f87e7f",
                            AlbumId = "cd361a62-fce0-41c1-a4d6-906e9600ccbb",
                            GenreId = "e8f10b22-50e2-4679-b958-d5982ce6b9d3"
                        },
                        new
                        {
                            Id = "05f606a8-86d8-4455-bb8a-7ce5ea6c1d58",
                            AlbumId = "41d85d5c-81b5-4033-9ea4-fffefe0e24e2",
                            GenreId = "67aa5ef1-eff1-4c62-bc73-94e6e5978ec1"
                        },
                        new
                        {
                            Id = "f4868f26-bb72-40e7-a9ba-46344a73b6ea",
                            AlbumId = "aeae8940-f8dc-443b-af63-d33301ea2be7",
                            GenreId = "b814ae8e-d5a7-45e2-a06e-8374b62416ee"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "b4b5ad33-75bc-4840-9bf2-4c4e478c4bb2",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5113),
                            SongId = "a49800ee-4f02-436c-b4d2-0964c0a3282d",
                            UserId = "b82bdeca-bdd0-4265-aac9-76144d055795"
                        },
                        new
                        {
                            Id = "06201d38-6ff3-4082-96ae-e4bb8a2e10e6",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5182),
                            SongId = "a49800ee-4f02-436c-b4d2-0964c0a3282d",
                            UserId = "cda0952d-d54a-4385-a8d5-d4254fe5ee58"
                        },
                        new
                        {
                            Id = "4fe82060-d927-4084-8f91-4a0fb4fba918",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5188),
                            SongId = "bab3c3c9-f15b-4261-aa87-13e856790219",
                            UserId = "b82bdeca-bdd0-4265-aac9-76144d055795"
                        },
                        new
                        {
                            Id = "d9ab92b8-b86e-4892-b8e9-741d76d90b42",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5192),
                            SongId = "bab3c3c9-f15b-4261-aa87-13e856790219",
                            UserId = "ca27dfa6-2e7d-4163-bcda-e00e003a129f"
                        },
                        new
                        {
                            Id = "c1a2609f-d63a-43f2-95d2-4f6643e23ff6",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5199),
                            SongId = "1600e6b7-f17a-4526-b74b-bc0d362631f1",
                            UserId = "cda0952d-d54a-4385-a8d5-d4254fe5ee58"
                        },
                        new
                        {
                            Id = "72fd6051-a410-4630-8756-ea1468f3eba4",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5206),
                            SongId = "e60355aa-6dc7-4209-a651-e9cf4ae8295c",
                            UserId = "b82bdeca-bdd0-4265-aac9-76144d055795"
                        },
                        new
                        {
                            Id = "18e94677-96af-4c26-98e3-f6c43ab1a0f8",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5216),
                            SongId = "e60355aa-6dc7-4209-a651-e9cf4ae8295c",
                            UserId = "cda0952d-d54a-4385-a8d5-d4254fe5ee58"
                        },
                        new
                        {
                            Id = "d2f8eefc-8acf-47e1-8c36-2611d2a9f6d2",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(5223),
                            SongId = "e60355aa-6dc7-4209-a651-e9cf4ae8295c",
                            UserId = "ca27dfa6-2e7d-4163-bcda-e00e003a129f"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "67aa5ef1-eff1-4c62-bc73-94e6e5978ec1",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(1492),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "b814ae8e-d5a7-45e2-a06e-8374b62416ee",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(1553),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "e8f10b22-50e2-4679-b958-d5982ce6b9d3",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(1560),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "86292c5a-2331-4ee0-9076-cf0e2323847b",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(6747),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "98a79188-3617-4f77-82ce-e9a3204fa2e3",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(6812),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "804f6d10-cf80-4c1b-a634-4dc0bbd83dcc",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(6819),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "a49800ee-4f02-436c-b4d2-0964c0a3282d",
                            AlbumId = "cd361a62-fce0-41c1-a4d6-906e9600ccbb",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(553),
                            Name = "Master Of Puppets",
                            PerformerId = "86292c5a-2331-4ee0-9076-cf0e2323847b"
                        },
                        new
                        {
                            Id = "bab3c3c9-f15b-4261-aa87-13e856790219",
                            AlbumId = "aeae8940-f8dc-443b-af63-d33301ea2be7",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(635),
                            Name = "Numb",
                            PerformerId = "804f6d10-cf80-4c1b-a634-4dc0bbd83dcc"
                        },
                        new
                        {
                            Id = "1600e6b7-f17a-4526-b74b-bc0d362631f1",
                            AlbumId = "41d85d5c-81b5-4033-9ea4-fffefe0e24e2",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(642),
                            Name = "Fear Of The Dark",
                            PerformerId = "98a79188-3617-4f77-82ce-e9a3204fa2e3"
                        },
                        new
                        {
                            Id = "e60355aa-6dc7-4209-a651-e9cf4ae8295c",
                            AlbumId = "0054ad40-5aee-4420-b94b-da257981e7a0",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(652),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "86292c5a-2331-4ee0-9076-cf0e2323847b"
                        },
                        new
                        {
                            Id = "e13b8166-dbfd-4129-a8a8-511a3bce7c6a",
                            AlbumId = "cd361a62-fce0-41c1-a4d6-906e9600ccbb",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 828, DateTimeKind.Local).AddTicks(659),
                            Name = "Battery",
                            PerformerId = "86292c5a-2331-4ee0-9076-cf0e2323847b"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b82bdeca-bdd0-4265-aac9-76144d055795",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 825, DateTimeKind.Local).AddTicks(8247),
                            Password = "123",
                            Username = "George"
                        },
                        new
                        {
                            Id = "cda0952d-d54a-4385-a8d5-d4254fe5ee58",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(5617),
                            Password = "123",
                            Username = "Martin"
                        },
                        new
                        {
                            Id = "ca27dfa6-2e7d-4163-bcda-e00e003a129f",
                            CreatedAt = new DateTime(2021, 1, 10, 20, 28, 41, 827, DateTimeKind.Local).AddTicks(5665),
                            Password = "123",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
