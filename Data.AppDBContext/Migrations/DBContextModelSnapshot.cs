// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "a2e1df8c-fc91-4a02-b0da-a9d031366d3a",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(5852),
                            Name = "Ride The Lightning",
                            PerformerId = "aabba9e8-db4d-47bc-80e5-fff06f00c43e",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "1cd73e58-0699-49e4-b099-3f9e8af10d58",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(5944),
                            Name = "Master Of Puppets",
                            PerformerId = "aabba9e8-db4d-47bc-80e5-fff06f00c43e",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "38c254e4-b1d7-4fa5-a1ad-ad67983b88fe",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(5955),
                            Name = "Fear Of The Dark",
                            PerformerId = "3a243c08-4037-4904-b165-6162b567a7e1",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "81a0da61-dc69-49ab-a57f-e282808523de",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(5962),
                            Name = "Meteora",
                            PerformerId = "fef9ca57-3365-487a-833f-b9bd531bacc7",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "0f0afbc1-1997-45c4-ad5c-a1ee4671e70c",
                            AlbumId = "a2e1df8c-fc91-4a02-b0da-a9d031366d3a",
                            GenreId = "65d327d2-1000-4eb7-ab02-c49a46ab9bf3"
                        },
                        new
                        {
                            Id = "c1cc0b3d-eedc-400d-92ad-85105ff4876c",
                            AlbumId = "1cd73e58-0699-49e4-b099-3f9e8af10d58",
                            GenreId = "d50ac7da-d01e-48c3-8c67-f94ccf002dfa"
                        },
                        new
                        {
                            Id = "890a3ae9-feb5-4762-8c6a-52ffa81e914e",
                            AlbumId = "38c254e4-b1d7-4fa5-a1ad-ad67983b88fe",
                            GenreId = "65d327d2-1000-4eb7-ab02-c49a46ab9bf3"
                        },
                        new
                        {
                            Id = "92dde1b2-9e38-4a6f-88ad-3b0f16750578",
                            AlbumId = "81a0da61-dc69-49ab-a57f-e282808523de",
                            GenreId = "3e8cf2b8-9b38-442d-b7ff-7c55d5bb5566"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "3c0f2273-7341-4ea6-b260-f4c52e5e68ad",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(249),
                            SongId = "e882b460-af7a-4368-8649-8c2af2441550",
                            UserId = "90d129ce-a34f-4e54-a633-2c9ef2ca854c"
                        },
                        new
                        {
                            Id = "e0d150c3-c82d-4c46-996c-3226805fb6ba",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(307),
                            SongId = "e882b460-af7a-4368-8649-8c2af2441550",
                            UserId = "746e9d54-e785-458c-9186-1d54ee25f4e6"
                        },
                        new
                        {
                            Id = "bfbee3bd-9f31-405b-a64a-4dfb426002cf",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(314),
                            SongId = "3accaa17-c7f3-4684-8c93-009f56f995ff",
                            UserId = "90d129ce-a34f-4e54-a633-2c9ef2ca854c"
                        },
                        new
                        {
                            Id = "14aeaaaa-4214-4ce7-9de1-33e2eb3ecc84",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(320),
                            SongId = "3accaa17-c7f3-4684-8c93-009f56f995ff",
                            UserId = "7a91cf78-ce5a-430f-891e-70d41a8dd7fa"
                        },
                        new
                        {
                            Id = "1849e22a-0e6d-4e5d-ab5b-e2f73f74abac",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(324),
                            SongId = "b8b2e246-d63c-41cb-9b8b-3bd41fde1f2a",
                            UserId = "746e9d54-e785-458c-9186-1d54ee25f4e6"
                        },
                        new
                        {
                            Id = "9f6bade5-a04c-4ece-8391-0be10abd98eb",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(341),
                            SongId = "4455a272-e6c3-4a8f-8081-85dba06d154a",
                            UserId = "90d129ce-a34f-4e54-a633-2c9ef2ca854c"
                        },
                        new
                        {
                            Id = "24bafa8b-fdb8-4c77-8478-8d527602934f",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(344),
                            SongId = "4455a272-e6c3-4a8f-8081-85dba06d154a",
                            UserId = "746e9d54-e785-458c-9186-1d54ee25f4e6"
                        },
                        new
                        {
                            Id = "b00a7ada-9b31-4c85-b050-33ad61f076f3",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 184, DateTimeKind.Local).AddTicks(351),
                            SongId = "4455a272-e6c3-4a8f-8081-85dba06d154a",
                            UserId = "7a91cf78-ce5a-430f-891e-70d41a8dd7fa"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "65d327d2-1000-4eb7-ab02-c49a46ab9bf3",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7685),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "3e8cf2b8-9b38-442d-b7ff-7c55d5bb5566",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7740),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "d50ac7da-d01e-48c3-8c67-f94ccf002dfa",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7747),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "aabba9e8-db4d-47bc-80e5-fff06f00c43e",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(4340),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "3a243c08-4037-4904-b165-6162b567a7e1",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(4443),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "fef9ca57-3365-487a-833f-b9bd531bacc7",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(4453),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "e882b460-af7a-4368-8649-8c2af2441550",
                            AlbumId = "1cd73e58-0699-49e4-b099-3f9e8af10d58",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7006),
                            Name = "Master Of Puppets",
                            PerformerId = "aabba9e8-db4d-47bc-80e5-fff06f00c43e"
                        },
                        new
                        {
                            Id = "3accaa17-c7f3-4684-8c93-009f56f995ff",
                            AlbumId = "81a0da61-dc69-49ab-a57f-e282808523de",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7074),
                            Name = "Numb",
                            PerformerId = "fef9ca57-3365-487a-833f-b9bd531bacc7"
                        },
                        new
                        {
                            Id = "b8b2e246-d63c-41cb-9b8b-3bd41fde1f2a",
                            AlbumId = "38c254e4-b1d7-4fa5-a1ad-ad67983b88fe",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7085),
                            Name = "Fear Of The Dark",
                            PerformerId = "3a243c08-4037-4904-b165-6162b567a7e1"
                        },
                        new
                        {
                            Id = "4455a272-e6c3-4a8f-8081-85dba06d154a",
                            AlbumId = "a2e1df8c-fc91-4a02-b0da-a9d031366d3a",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7091),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "aabba9e8-db4d-47bc-80e5-fff06f00c43e"
                        },
                        new
                        {
                            Id = "fc9e59e9-df78-44a8-9d66-6ea43efddd47",
                            AlbumId = "1cd73e58-0699-49e4-b099-3f9e8af10d58",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(7102),
                            Name = "Battery",
                            PerformerId = "aabba9e8-db4d-47bc-80e5-fff06f00c43e"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "90d129ce-a34f-4e54-a633-2c9ef2ca854c",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 181, DateTimeKind.Local).AddTicks(6810),
                            Password = "123",
                            Username = "George"
                        },
                        new
                        {
                            Id = "746e9d54-e785-458c-9186-1d54ee25f4e6",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(3477),
                            Password = "123",
                            Username = "Martin"
                        },
                        new
                        {
                            Id = "7a91cf78-ce5a-430f-891e-70d41a8dd7fa",
                            CreatedAt = new DateTime(2020, 12, 26, 16, 39, 27, 183, DateTimeKind.Local).AddTicks(3525),
                            Password = "123",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
