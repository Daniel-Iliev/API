// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "8f93a65e-860f-4100-aa11-a1cb8ef31bc6",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(6320),
                            Name = "Ride The Lightning",
                            PerformerId = "2c4b7719-39fd-4678-b6fa-f69fccc28bd7",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "d5b721e0-1bf1-4d89-a51a-ae5d02600a06",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(6419),
                            Name = "Master Of Puppets",
                            PerformerId = "2c4b7719-39fd-4678-b6fa-f69fccc28bd7",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "12d2535b-9d95-438a-83f2-8fc72df23e50",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(6429),
                            Name = "Fear Of The Dark",
                            PerformerId = "5af70935-d539-4e07-b4e8-62f84fc49f9d",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "22ab32bc-9bfe-48ac-96cb-fb97ba516053",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(6439),
                            Name = "Meteora",
                            PerformerId = "97411613-3bb9-4613-9117-77bb2adbd916",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "a2dbda4d-9ea9-4e2a-b084-a751dd3b193d",
                            AlbumId = "8f93a65e-860f-4100-aa11-a1cb8ef31bc6",
                            GenreId = "795cf21a-6ec8-4c15-8218-31c9e230c647"
                        },
                        new
                        {
                            Id = "b161891c-0261-4f1f-99f3-1b5bd5ccfc7e",
                            AlbumId = "d5b721e0-1bf1-4d89-a51a-ae5d02600a06",
                            GenreId = "82f737f7-278e-4636-bbd2-348285e35135"
                        },
                        new
                        {
                            Id = "c5273603-9a54-45cf-8fea-3fd4229871d1",
                            AlbumId = "12d2535b-9d95-438a-83f2-8fc72df23e50",
                            GenreId = "795cf21a-6ec8-4c15-8218-31c9e230c647"
                        },
                        new
                        {
                            Id = "c8fa76df-941e-4c1f-845a-f68c66df274e",
                            AlbumId = "22ab32bc-9bfe-48ac-96cb-fb97ba516053",
                            GenreId = "0cc0c7e8-d52b-420d-b696-ab37420fd240"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "a1e5113c-695e-4947-9943-99b098aadbda",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(911),
                            SongId = "42681a67-ebe1-4160-9b66-db5b941f9c08",
                            UserId = "84500a25-599f-4afb-a71a-5784b29f3c30"
                        },
                        new
                        {
                            Id = "9b6c2c5d-69b5-40f0-80b2-bc74a8f611c1",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(976),
                            SongId = "42681a67-ebe1-4160-9b66-db5b941f9c08",
                            UserId = "ca1d8f57-ce7b-432f-90f0-5890638981ba"
                        },
                        new
                        {
                            Id = "f6352dd8-72ed-4ca3-9d99-e2a6ff8a150e",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(982),
                            SongId = "3677d298-0471-406f-8d88-9d2772f32d63",
                            UserId = "84500a25-599f-4afb-a71a-5784b29f3c30"
                        },
                        new
                        {
                            Id = "e241ffed-0a6b-425c-aeeb-5797dde11960",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(989),
                            SongId = "3677d298-0471-406f-8d88-9d2772f32d63",
                            UserId = "e8243ba1-6073-4e76-9417-d3bfaeb2a866"
                        },
                        new
                        {
                            Id = "4e201662-0c72-4982-b9e7-af0d25238efd",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(993),
                            SongId = "81533d2f-5321-4b2b-9d35-2c927ab7bfdd",
                            UserId = "ca1d8f57-ce7b-432f-90f0-5890638981ba"
                        },
                        new
                        {
                            Id = "e3455abc-a921-4abd-a2c2-377c83497b5a",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(1003),
                            SongId = "d7448f8d-2b63-427c-a4da-66f5ee464019",
                            UserId = "84500a25-599f-4afb-a71a-5784b29f3c30"
                        },
                        new
                        {
                            Id = "3ad4f78a-4d50-47cc-a553-485629a285b7",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(1013),
                            SongId = "d7448f8d-2b63-427c-a4da-66f5ee464019",
                            UserId = "ca1d8f57-ce7b-432f-90f0-5890638981ba"
                        },
                        new
                        {
                            Id = "9a51f68f-eba4-4abf-96b0-bfbaacdfcf50",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 15, DateTimeKind.Local).AddTicks(1020),
                            SongId = "d7448f8d-2b63-427c-a4da-66f5ee464019",
                            UserId = "e8243ba1-6073-4e76-9417-d3bfaeb2a866"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "795cf21a-6ec8-4c15-8218-31c9e230c647",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(8265),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "0cc0c7e8-d52b-420d-b696-ab37420fd240",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(8323),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "82f737f7-278e-4636-bbd2-348285e35135",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(8334),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "2c4b7719-39fd-4678-b6fa-f69fccc28bd7",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(4791),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "5af70935-d539-4e07-b4e8-62f84fc49f9d",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(4862),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "97411613-3bb9-4613-9117-77bb2adbd916",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(4873),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "42681a67-ebe1-4160-9b66-db5b941f9c08",
                            AlbumId = "d5b721e0-1bf1-4d89-a51a-ae5d02600a06",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(7504),
                            Name = "Master Of Puppets",
                            PerformerId = "2c4b7719-39fd-4678-b6fa-f69fccc28bd7"
                        },
                        new
                        {
                            Id = "3677d298-0471-406f-8d88-9d2772f32d63",
                            AlbumId = "22ab32bc-9bfe-48ac-96cb-fb97ba516053",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(7586),
                            Name = "Numb",
                            PerformerId = "97411613-3bb9-4613-9117-77bb2adbd916"
                        },
                        new
                        {
                            Id = "81533d2f-5321-4b2b-9d35-2c927ab7bfdd",
                            AlbumId = "12d2535b-9d95-438a-83f2-8fc72df23e50",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(7596),
                            Name = "Fear Of The Dark",
                            PerformerId = "5af70935-d539-4e07-b4e8-62f84fc49f9d"
                        },
                        new
                        {
                            Id = "d7448f8d-2b63-427c-a4da-66f5ee464019",
                            AlbumId = "8f93a65e-860f-4100-aa11-a1cb8ef31bc6",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(7634),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "2c4b7719-39fd-4678-b6fa-f69fccc28bd7"
                        },
                        new
                        {
                            Id = "e4a667f9-1a3f-4bec-a8d1-032531a7f4b9",
                            AlbumId = "d5b721e0-1bf1-4d89-a51a-ae5d02600a06",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(7644),
                            Name = "Battery",
                            PerformerId = "2c4b7719-39fd-4678-b6fa-f69fccc28bd7"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "84500a25-599f-4afb-a71a-5784b29f3c30",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 12, DateTimeKind.Local).AddTicks(5116),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "George"
                        },
                        new
                        {
                            Id = "ca1d8f57-ce7b-432f-90f0-5890638981ba",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(3831),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "Admin",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = "e8243ba1-6073-4e76-9417-d3bfaeb2a866",
                            CreatedAt = new DateTime(2021, 1, 16, 17, 45, 51, 14, DateTimeKind.Local).AddTicks(3876),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
