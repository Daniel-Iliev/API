// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201216075708_Filldatabase2")]
    partial class Filldatabase2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "eb4e9469-92dd-4ee5-9090-8461befe87e6",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 409, DateTimeKind.Local).AddTicks(942),
                            Name = "Ride The Lightning",
                            PerformerId = "fad20c72-cb3c-4ac8-88c6-66d14768830d",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "026c4bfe-14e3-4415-a4f7-47006bc03dc4",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 409, DateTimeKind.Local).AddTicks(1034),
                            Name = "Master Of Puppets",
                            PerformerId = "fad20c72-cb3c-4ac8-88c6-66d14768830d",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "f1270228-d5de-4268-bdd0-cf5116ca8dea",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 409, DateTimeKind.Local).AddTicks(1045),
                            Name = "Fear Of The Dark",
                            PerformerId = "f8829c40-1269-4354-af8a-5c4a9dc485f6",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "a671573d-5720-4675-8b7d-5ac49cdb73ae",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 409, DateTimeKind.Local).AddTicks(1051),
                            Name = "Meteora",
                            PerformerId = "3c141ed5-dd3b-482f-afa2-cf43d24f21a3",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "5058c802-2e65-4df2-8935-08c1c49f90dd",
                            AlbumId = "eb4e9469-92dd-4ee5-9090-8461befe87e6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "41809a39-4915-4d18-93f2-72be8bf47dd4"
                        },
                        new
                        {
                            Id = "51ae8d68-ca16-41f5-9c5f-5af8943a8379",
                            AlbumId = "026c4bfe-14e3-4415-a4f7-47006bc03dc4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "e7408c1a-07d3-45c7-a24a-efb0aae76fe1"
                        },
                        new
                        {
                            Id = "030c10b4-1161-436c-bb75-36abff240ca7",
                            AlbumId = "f1270228-d5de-4268-bdd0-cf5116ca8dea",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "41809a39-4915-4d18-93f2-72be8bf47dd4"
                        },
                        new
                        {
                            Id = "16bcac2f-2082-494e-a172-e9512fd5a301",
                            AlbumId = "a671573d-5720-4675-8b7d-5ac49cdb73ae",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "604556e9-f41c-4e28-889c-b63493e55d80"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "29e2aff8-b677-4f41-9fe4-0480f529279c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "b5765be5-ef00-4355-9167-3d15e689d8f1",
                            UserId = "b8a74375-8ca5-4966-b44d-f31fe3117211"
                        },
                        new
                        {
                            Id = "24f4e295-78a2-4b34-9ae5-ce8a2050d8cf",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "b5765be5-ef00-4355-9167-3d15e689d8f1",
                            UserId = "0dfe5c1b-646a-4d73-a467-365318003bab"
                        },
                        new
                        {
                            Id = "dbf82772-4406-48a7-85a1-6083eecafb71",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "2cdbf016-e622-4d9b-94cf-994f506df8e1",
                            UserId = "b8a74375-8ca5-4966-b44d-f31fe3117211"
                        },
                        new
                        {
                            Id = "e1afbd79-a138-4644-af2a-6269cde8469f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "2cdbf016-e622-4d9b-94cf-994f506df8e1",
                            UserId = "2c543e1e-20aa-4a7f-bafd-226c3d627728"
                        },
                        new
                        {
                            Id = "812d14fc-126c-44e7-8cad-53f0ee9efe7a",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "a9c1b8f9-70bc-4a6f-ab72-795a6fa03098",
                            UserId = "0dfe5c1b-646a-4d73-a467-365318003bab"
                        },
                        new
                        {
                            Id = "78fb05c0-a6b8-4e94-945d-f50782dcd57c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "e7d41fbc-dbac-406f-826d-cfa2546b510d",
                            UserId = "b8a74375-8ca5-4966-b44d-f31fe3117211"
                        },
                        new
                        {
                            Id = "2c5863e8-f200-4864-9119-06c28031ca1f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "e7d41fbc-dbac-406f-826d-cfa2546b510d",
                            UserId = "0dfe5c1b-646a-4d73-a467-365318003bab"
                        },
                        new
                        {
                            Id = "72aefee2-a0b1-434f-9588-48d2d38567e6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "e7d41fbc-dbac-406f-826d-cfa2546b510d",
                            UserId = "2c543e1e-20aa-4a7f-bafd-226c3d627728"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "41809a39-4915-4d18-93f2-72be8bf47dd4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "604556e9-f41c-4e28-889c-b63493e55d80",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "e7408c1a-07d3-45c7-a24a-efb0aae76fe1",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "fad20c72-cb3c-4ac8-88c6-66d14768830d",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 407, DateTimeKind.Local).AddTicks(357),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "f8829c40-1269-4354-af8a-5c4a9dc485f6",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 408, DateTimeKind.Local).AddTicks(8665),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "3c141ed5-dd3b-482f-afa2-cf43d24f21a3",
                            CreatedAt = new DateTime(2020, 12, 16, 9, 57, 7, 408, DateTimeKind.Local).AddTicks(8713),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.PerformerAlbum", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("PerformerAlbums");

                    b.HasData(
                        new
                        {
                            Id = "b764b07b-d9b5-4f5a-8b6b-be5fb4c07800",
                            AlbumId = "eb4e9469-92dd-4ee5-9090-8461befe87e6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "fad20c72-cb3c-4ac8-88c6-66d14768830d"
                        },
                        new
                        {
                            Id = "9a88f07f-6160-44e6-937c-b0009f9af5e2",
                            AlbumId = "026c4bfe-14e3-4415-a4f7-47006bc03dc4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "fad20c72-cb3c-4ac8-88c6-66d14768830d"
                        },
                        new
                        {
                            Id = "63fa7978-28d5-4e10-b7d2-c343ce0c81ab",
                            AlbumId = "f1270228-d5de-4268-bdd0-cf5116ca8dea",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "f8829c40-1269-4354-af8a-5c4a9dc485f6"
                        },
                        new
                        {
                            Id = "9fac3faa-ed07-448b-babe-952c123a7557",
                            AlbumId = "a671573d-5720-4675-8b7d-5ac49cdb73ae",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "3c141ed5-dd3b-482f-afa2-cf43d24f21a3"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "b5765be5-ef00-4355-9167-3d15e689d8f1",
                            AlbumId = "026c4bfe-14e3-4415-a4f7-47006bc03dc4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Master Of Puppets"
                        },
                        new
                        {
                            Id = "2cdbf016-e622-4d9b-94cf-994f506df8e1",
                            AlbumId = "a671573d-5720-4675-8b7d-5ac49cdb73ae",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Numb"
                        },
                        new
                        {
                            Id = "a9c1b8f9-70bc-4a6f-ab72-795a6fa03098",
                            AlbumId = "f1270228-d5de-4268-bdd0-cf5116ca8dea",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fear Of The Dark"
                        },
                        new
                        {
                            Id = "e7d41fbc-dbac-406f-826d-cfa2546b510d",
                            AlbumId = "eb4e9469-92dd-4ee5-9090-8461befe87e6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "For Whom The Bell Tolls"
                        },
                        new
                        {
                            Id = "24457118-19da-4e5a-be61-db60d2554cb9",
                            AlbumId = "026c4bfe-14e3-4415-a4f7-47006bc03dc4",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Battery"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b8a74375-8ca5-4966-b44d-f31fe3117211",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "george@123.bg",
                            Password = "123",
                            Username = "George"
                        },
                        new
                        {
                            Id = "0dfe5c1b-646a-4d73-a467-365318003bab",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "martin@123.bg",
                            Password = "123",
                            Username = "Martin"
                        },
                        new
                        {
                            Id = "2c543e1e-20aa-4a7f-bafd-226c3d627728",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jake@123.bg",
                            Password = "123",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany()
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.PerformerAlbum", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("PerformerAlbums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("PerformerAlbums");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
