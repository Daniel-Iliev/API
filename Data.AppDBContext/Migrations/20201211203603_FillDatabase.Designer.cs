// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201211203603_FillDatabase")]
    partial class FillDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "7077f612-af75-48d3-981a-98c620ba4d36",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 132, DateTimeKind.Local).AddTicks(900),
                            Name = "Ride The Lightning",
                            PerformerId = "5265a577-36f8-4853-a05a-292f05730e70",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "c2ceaf88-f91d-490a-bbd3-49d5ca572f4b",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 132, DateTimeKind.Local).AddTicks(1026),
                            Name = "Master Of Puppets",
                            PerformerId = "5265a577-36f8-4853-a05a-292f05730e70",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "7f43bd44-fa9a-4a82-b39c-0bbc0cbc2727",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 132, DateTimeKind.Local).AddTicks(1108),
                            Name = "Fear Of The Dark",
                            PerformerId = "8e9b94b1-b18a-41a8-bb03-a5d250b3f9d0",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "8155d4b2-f2f1-4675-a0fe-826733f525f3",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 132, DateTimeKind.Local).AddTicks(1125),
                            Name = "Meteora",
                            PerformerId = "e5227f6f-2936-41cb-911c-8df77727806f",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "e3a7467a-7470-4bf3-acc8-5d10d469522b",
                            AlbumId = "7077f612-af75-48d3-981a-98c620ba4d36",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "9158e409-12c8-44db-9869-7443f9f8dbc6"
                        },
                        new
                        {
                            Id = "7088f56b-c756-4222-acd1-1b1082fc8053",
                            AlbumId = "c2ceaf88-f91d-490a-bbd3-49d5ca572f4b",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "0ece1862-5637-49ff-8c8f-d9537d32b97f"
                        },
                        new
                        {
                            Id = "1f869b14-9d24-4262-ad99-ba83272bb2e7",
                            AlbumId = "7f43bd44-fa9a-4a82-b39c-0bbc0cbc2727",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "9158e409-12c8-44db-9869-7443f9f8dbc6"
                        },
                        new
                        {
                            Id = "930c864d-3405-4b6f-a90d-c4bf80c3a79f",
                            AlbumId = "8155d4b2-f2f1-4675-a0fe-826733f525f3",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenreId = "7b3db283-c820-4676-827b-336813806fa0"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "efb08ba0-3fed-4db5-a115-6ad5fba1e33b",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "08db0f33-8539-45f2-9338-2444b7187f48",
                            UserId = "53aab963-a235-491e-a55a-7132c65ffe4c"
                        },
                        new
                        {
                            Id = "c8acac73-8a45-463e-9b1f-c084ed88cefd",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "08db0f33-8539-45f2-9338-2444b7187f48",
                            UserId = "3cf0b1bb-2b3f-43e0-857f-5d3130a5e2d0"
                        },
                        new
                        {
                            Id = "dce6c7c2-c129-4494-8b71-656c31224572",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "b4c1f7de-d3ef-4e2c-8ab1-d9bc72d48078",
                            UserId = "53aab963-a235-491e-a55a-7132c65ffe4c"
                        },
                        new
                        {
                            Id = "07ce6534-a901-4ad8-b648-2408605b99bf",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "b4c1f7de-d3ef-4e2c-8ab1-d9bc72d48078",
                            UserId = "99a68ca2-f335-4c17-af59-7e349ae65e38"
                        },
                        new
                        {
                            Id = "cc0a2ea6-0c46-4aaf-b73c-6c7c0423b46e",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "2461af5a-706f-4739-9f9b-8a9d9dcb068d",
                            UserId = "3cf0b1bb-2b3f-43e0-857f-5d3130a5e2d0"
                        },
                        new
                        {
                            Id = "cee3fa8d-16fb-44b3-ba42-a47565b5d95d",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "c95f51f6-8cd5-4a7c-bc5e-7e2f6e42394d",
                            UserId = "53aab963-a235-491e-a55a-7132c65ffe4c"
                        },
                        new
                        {
                            Id = "0d7cf98e-d379-4fa8-8c24-c435b4a74524",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "c95f51f6-8cd5-4a7c-bc5e-7e2f6e42394d",
                            UserId = "3cf0b1bb-2b3f-43e0-857f-5d3130a5e2d0"
                        },
                        new
                        {
                            Id = "cf158dcd-d856-4553-8c52-bd0d6ca3bd86",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SongId = "c95f51f6-8cd5-4a7c-bc5e-7e2f6e42394d",
                            UserId = "99a68ca2-f335-4c17-af59-7e349ae65e38"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "9158e409-12c8-44db-9869-7443f9f8dbc6",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "7b3db283-c820-4676-827b-336813806fa0",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "0ece1862-5637-49ff-8c8f-d9537d32b97f",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "5265a577-36f8-4853-a05a-292f05730e70",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 129, DateTimeKind.Local).AddTicks(3531),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "8e9b94b1-b18a-41a8-bb03-a5d250b3f9d0",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 131, DateTimeKind.Local).AddTicks(7999),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "e5227f6f-2936-41cb-911c-8df77727806f",
                            CreatedAt = new DateTime(2020, 12, 11, 22, 36, 3, 131, DateTimeKind.Local).AddTicks(8053),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.PerformerAlbum", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("PerformerAlbums");

                    b.HasData(
                        new
                        {
                            Id = "8c50acec-a20a-4234-bc09-dec2aba48f1c",
                            AlbumId = "7077f612-af75-48d3-981a-98c620ba4d36",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "5265a577-36f8-4853-a05a-292f05730e70"
                        },
                        new
                        {
                            Id = "b43103e1-4e84-489f-aec7-6a9744eaab4d",
                            AlbumId = "c2ceaf88-f91d-490a-bbd3-49d5ca572f4b",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "5265a577-36f8-4853-a05a-292f05730e70"
                        },
                        new
                        {
                            Id = "4b970e7c-66b7-4486-9541-f110c3162e9e",
                            AlbumId = "7f43bd44-fa9a-4a82-b39c-0bbc0cbc2727",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "8e9b94b1-b18a-41a8-bb03-a5d250b3f9d0"
                        },
                        new
                        {
                            Id = "35b5ecc5-5562-4e56-abf8-9908e97479eb",
                            AlbumId = "8155d4b2-f2f1-4675-a0fe-826733f525f3",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PerformerId = "e5227f6f-2936-41cb-911c-8df77727806f"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "08db0f33-8539-45f2-9338-2444b7187f48",
                            AlbumId = "c2ceaf88-f91d-490a-bbd3-49d5ca572f4b",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Master Of Puppets"
                        },
                        new
                        {
                            Id = "b4c1f7de-d3ef-4e2c-8ab1-d9bc72d48078",
                            AlbumId = "8155d4b2-f2f1-4675-a0fe-826733f525f3",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Numb"
                        },
                        new
                        {
                            Id = "2461af5a-706f-4739-9f9b-8a9d9dcb068d",
                            AlbumId = "7f43bd44-fa9a-4a82-b39c-0bbc0cbc2727",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fear Of The Dark"
                        },
                        new
                        {
                            Id = "c95f51f6-8cd5-4a7c-bc5e-7e2f6e42394d",
                            AlbumId = "7077f612-af75-48d3-981a-98c620ba4d36",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "For Whom The Bell Tolls"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "53aab963-a235-491e-a55a-7132c65ffe4c",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "george@123.bg",
                            Password = "123",
                            Username = "George"
                        },
                        new
                        {
                            Id = "3cf0b1bb-2b3f-43e0-857f-5d3130a5e2d0",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "martin@123.bg",
                            Password = "123",
                            Username = "Martin"
                        },
                        new
                        {
                            Id = "99a68ca2-f335-4c17-af59-7e349ae65e38",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jake@123.bg",
                            Password = "123",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany()
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.PerformerAlbum", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany()
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("PerformerAlbums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("PerformerAlbums");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
