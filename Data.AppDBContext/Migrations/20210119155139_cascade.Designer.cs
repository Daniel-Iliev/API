// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210119155139_cascade")]
    partial class cascade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "f2d8ab8e-aa95-4b03-a985-f7380aae16a5",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(6300),
                            Name = "Ride The Lightning",
                            PerformerId = "3e907d79-377f-409a-b831-7d6608c07ef9",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "f287f5fe-9007-4176-b1b9-8a98208d5d27",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(6395),
                            Name = "Master Of Puppets",
                            PerformerId = "3e907d79-377f-409a-b831-7d6608c07ef9",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "a9633e1c-35ce-4cde-aa8e-0eda34bad3c5",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(6405),
                            Name = "Fear Of The Dark",
                            PerformerId = "41ddea7e-9910-424d-baa9-5cc9226e5935",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "0be27510-fb8b-4213-b0da-c3bd59a1e72b",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(6412),
                            Name = "Meteora",
                            PerformerId = "5fb8e066-519d-4c54-a995-8d50455572aa",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "1c3c2fbe-932a-4b6f-a410-d3f1304d17af",
                            AlbumId = "f2d8ab8e-aa95-4b03-a985-f7380aae16a5",
                            GenreId = "c81e6581-6f6e-476e-8088-5b2a57eececc"
                        },
                        new
                        {
                            Id = "d4aac9e2-952c-48b2-a31e-bc2be42b7762",
                            AlbumId = "f287f5fe-9007-4176-b1b9-8a98208d5d27",
                            GenreId = "91918961-9245-4390-9b7a-9b5d80fd52d8"
                        },
                        new
                        {
                            Id = "aa46286e-a55c-4a24-a4dc-3831a5429a8a",
                            AlbumId = "a9633e1c-35ce-4cde-aa8e-0eda34bad3c5",
                            GenreId = "c81e6581-6f6e-476e-8088-5b2a57eececc"
                        },
                        new
                        {
                            Id = "4775241d-0ef6-40e4-892e-bdeec1d62fb1",
                            AlbumId = "0be27510-fb8b-4213-b0da-c3bd59a1e72b",
                            GenreId = "48d4618a-b0a0-47d5-ba5b-bdd3931092e9"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "a025357f-586d-4625-9e9e-989a0d942bb5",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2683),
                            SongId = "ac7c531e-8248-4c73-8f68-9d57f8aa65e5",
                            UserId = "31913a80-843e-48a3-9bf1-1c55b4289fca"
                        },
                        new
                        {
                            Id = "b0f4cdb4-890f-4706-9e97-2804114dd496",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2748),
                            SongId = "ac7c531e-8248-4c73-8f68-9d57f8aa65e5",
                            UserId = "7340472b-b13b-4d2e-8103-12ea6fe8838d"
                        },
                        new
                        {
                            Id = "660705c0-8692-4b83-8c5a-36155daf7164",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2754),
                            SongId = "41957082-ec23-4eb3-863d-ad0e93d484b2",
                            UserId = "31913a80-843e-48a3-9bf1-1c55b4289fca"
                        },
                        new
                        {
                            Id = "1076d79b-a0a8-457c-a6c0-d1ac43b97fc7",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2761),
                            SongId = "41957082-ec23-4eb3-863d-ad0e93d484b2",
                            UserId = "6b3d7129-4209-4a74-871e-2d603db08084"
                        },
                        new
                        {
                            Id = "d72dad24-a187-4a4d-a1bc-45353d5e11f3",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2765),
                            SongId = "46edded6-9172-4b81-b2c1-b965abf587cc",
                            UserId = "7340472b-b13b-4d2e-8103-12ea6fe8838d"
                        },
                        new
                        {
                            Id = "e7e64571-8cc8-41d1-8ea7-9979eeeac743",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2775),
                            SongId = "40b3b061-186f-44ad-9edd-7e11360b0838",
                            UserId = "31913a80-843e-48a3-9bf1-1c55b4289fca"
                        },
                        new
                        {
                            Id = "1681c14b-7ac9-4e4c-9647-2497b1219a11",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2785),
                            SongId = "40b3b061-186f-44ad-9edd-7e11360b0838",
                            UserId = "7340472b-b13b-4d2e-8103-12ea6fe8838d"
                        },
                        new
                        {
                            Id = "cee2b070-9ecd-4ce7-9758-505158d4e787",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 160, DateTimeKind.Local).AddTicks(2789),
                            SongId = "40b3b061-186f-44ad-9edd-7e11360b0838",
                            UserId = "6b3d7129-4209-4a74-871e-2d603db08084"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "c81e6581-6f6e-476e-8088-5b2a57eececc",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(8907),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "48d4618a-b0a0-47d5-ba5b-bdd3931092e9",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(8965),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "91918961-9245-4390-9b7a-9b5d80fd52d8",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(8972),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "3e907d79-377f-409a-b831-7d6608c07ef9",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(4105),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "41ddea7e-9910-424d-baa9-5cc9226e5935",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(4177),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "5fb8e066-519d-4c54-a995-8d50455572aa",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(4183),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "ac7c531e-8248-4c73-8f68-9d57f8aa65e5",
                            AlbumId = "f287f5fe-9007-4176-b1b9-8a98208d5d27",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(7911),
                            Name = "Master Of Puppets",
                            PerformerId = "3e907d79-377f-409a-b831-7d6608c07ef9"
                        },
                        new
                        {
                            Id = "41957082-ec23-4eb3-863d-ad0e93d484b2",
                            AlbumId = "0be27510-fb8b-4213-b0da-c3bd59a1e72b",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(7993),
                            Name = "Numb",
                            PerformerId = "5fb8e066-519d-4c54-a995-8d50455572aa"
                        },
                        new
                        {
                            Id = "46edded6-9172-4b81-b2c1-b965abf587cc",
                            AlbumId = "a9633e1c-35ce-4cde-aa8e-0eda34bad3c5",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(8047),
                            Name = "Fear Of The Dark",
                            PerformerId = "41ddea7e-9910-424d-baa9-5cc9226e5935"
                        },
                        new
                        {
                            Id = "40b3b061-186f-44ad-9edd-7e11360b0838",
                            AlbumId = "f2d8ab8e-aa95-4b03-a985-f7380aae16a5",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(8057),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "3e907d79-377f-409a-b831-7d6608c07ef9"
                        },
                        new
                        {
                            Id = "45426e64-4005-48f3-a771-afeaa0c75f81",
                            AlbumId = "f287f5fe-9007-4176-b1b9-8a98208d5d27",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(8064),
                            Name = "Battery",
                            PerformerId = "3e907d79-377f-409a-b831-7d6608c07ef9"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "31913a80-843e-48a3-9bf1-1c55b4289fca",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 157, DateTimeKind.Local).AddTicks(5714),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "George"
                        },
                        new
                        {
                            Id = "7340472b-b13b-4d2e-8103-12ea6fe8838d",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(2985),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "Admin",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = "6b3d7129-4209-4a74-871e-2d603db08084",
                            CreatedAt = new DateTime(2021, 1, 19, 17, 51, 39, 159, DateTimeKind.Local).AddTicks(3030),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
