// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210123202711_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "cbf927f1-c476-4b62-b1eb-c082244431cd",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(1724),
                            Name = "Ride The Lightning",
                            PerformerId = "93907019-2005-43c1-9286-d5c8fbb7546c",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "4bc2b41a-6144-4b41-aa47-2784927edf02",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(1816),
                            Name = "Master Of Puppets",
                            PerformerId = "93907019-2005-43c1-9286-d5c8fbb7546c",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "fc405a55-110f-4431-bbdf-cc4c94217138",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(1826),
                            Name = "Fear Of The Dark",
                            PerformerId = "c2b6dfd2-bc17-40a4-826a-9a99940e95f6",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "55cb80a3-fdb7-4ec9-b232-15942ef1c18f",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(1840),
                            Name = "Meteora",
                            PerformerId = "c0ecc8df-c356-4989-87ac-5f9c4fa3380f",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "b2a88fdd-3b42-4182-b7b8-820b0edf06ea",
                            AlbumId = "cbf927f1-c476-4b62-b1eb-c082244431cd",
                            GenreId = "30637db2-d514-49f8-828a-ce614c64ccb2"
                        },
                        new
                        {
                            Id = "678e673b-00bb-44f3-9701-575c964d4daa",
                            AlbumId = "4bc2b41a-6144-4b41-aa47-2784927edf02",
                            GenreId = "ee1a6b6a-f129-440f-a4d9-e6c5bd57546a"
                        },
                        new
                        {
                            Id = "7e5223cc-f29b-4796-9051-0da80b186a58",
                            AlbumId = "fc405a55-110f-4431-bbdf-cc4c94217138",
                            GenreId = "30637db2-d514-49f8-828a-ce614c64ccb2"
                        },
                        new
                        {
                            Id = "5531fde8-1548-470c-a703-9cffbcd4f1ce",
                            AlbumId = "55cb80a3-fdb7-4ec9-b232-15942ef1c18f",
                            GenreId = "0223bfad-b92d-43f5-bf95-435e52673d81"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "b92cd0f6-54d9-4dae-bec6-42e46c47714a",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(7988),
                            SongId = "c618f7ea-0b9a-40cc-9c2e-d0784c1e55bb",
                            UserId = "b5b87537-d4d2-4728-a593-8a3d5032ee6a"
                        },
                        new
                        {
                            Id = "de3785e5-5257-4ac1-bfeb-156391012522",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8059),
                            SongId = "c618f7ea-0b9a-40cc-9c2e-d0784c1e55bb",
                            UserId = "dc8f489d-bd9a-4c51-8b9a-610350696793"
                        },
                        new
                        {
                            Id = "c13c1fdb-0ab1-4da9-86ad-78e615f03873",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8070),
                            SongId = "6f1cbaef-d77d-45ff-a155-bd19379abb26",
                            UserId = "b5b87537-d4d2-4728-a593-8a3d5032ee6a"
                        },
                        new
                        {
                            Id = "2e64a42c-a02b-4024-918d-605c638db296",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8080),
                            SongId = "6f1cbaef-d77d-45ff-a155-bd19379abb26",
                            UserId = "712a1c13-8c17-4ef1-9e41-f718bbd1c513"
                        },
                        new
                        {
                            Id = "a5b64033-fb17-4f39-90b9-6512dc2d7a17",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8087),
                            SongId = "561a6f9b-6733-49e5-92c4-5e5d7501839b",
                            UserId = "dc8f489d-bd9a-4c51-8b9a-610350696793"
                        },
                        new
                        {
                            Id = "c1f12015-eedf-4354-973b-bff138e09cc1",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8094),
                            SongId = "5c936eb3-4d40-4cb3-a2f4-5ebb27fadbb3",
                            UserId = "b5b87537-d4d2-4728-a593-8a3d5032ee6a"
                        },
                        new
                        {
                            Id = "90b2b690-dd31-4c82-ba57-7d3316d111af",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8097),
                            SongId = "5c936eb3-4d40-4cb3-a2f4-5ebb27fadbb3",
                            UserId = "dc8f489d-bd9a-4c51-8b9a-610350696793"
                        },
                        new
                        {
                            Id = "ae64a577-ca2e-4320-b8b2-b30f53c1c31d",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(8104),
                            SongId = "5c936eb3-4d40-4cb3-a2f4-5ebb27fadbb3",
                            UserId = "712a1c13-8c17-4ef1-9e41-f718bbd1c513"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "30637db2-d514-49f8-828a-ce614c64ccb2",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(4373),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "0223bfad-b92d-43f5-bf95-435e52673d81",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(4434),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "ee1a6b6a-f129-440f-a4d9-e6c5bd57546a",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(4448),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "93907019-2005-43c1-9286-d5c8fbb7546c",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 645, DateTimeKind.Local).AddTicks(9614),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "c2b6dfd2-bc17-40a4-826a-9a99940e95f6",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 645, DateTimeKind.Local).AddTicks(9683),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "c0ecc8df-c356-4989-87ac-5f9c4fa3380f",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 645, DateTimeKind.Local).AddTicks(9696),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "c618f7ea-0b9a-40cc-9c2e-d0784c1e55bb",
                            AlbumId = "4bc2b41a-6144-4b41-aa47-2784927edf02",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(3410),
                            Name = "Master Of Puppets",
                            PerformerId = "93907019-2005-43c1-9286-d5c8fbb7546c"
                        },
                        new
                        {
                            Id = "6f1cbaef-d77d-45ff-a155-bd19379abb26",
                            AlbumId = "55cb80a3-fdb7-4ec9-b232-15942ef1c18f",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(3485),
                            Name = "Numb",
                            PerformerId = "c0ecc8df-c356-4989-87ac-5f9c4fa3380f"
                        },
                        new
                        {
                            Id = "561a6f9b-6733-49e5-92c4-5e5d7501839b",
                            AlbumId = "fc405a55-110f-4431-bbdf-cc4c94217138",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(3499),
                            Name = "Fear Of The Dark",
                            PerformerId = "c2b6dfd2-bc17-40a4-826a-9a99940e95f6"
                        },
                        new
                        {
                            Id = "5c936eb3-4d40-4cb3-a2f4-5ebb27fadbb3",
                            AlbumId = "cbf927f1-c476-4b62-b1eb-c082244431cd",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(3509),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "93907019-2005-43c1-9286-d5c8fbb7546c"
                        },
                        new
                        {
                            Id = "4ec69faa-9825-44dd-9990-0b7fa4de99ed",
                            AlbumId = "4bc2b41a-6144-4b41-aa47-2784927edf02",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 646, DateTimeKind.Local).AddTicks(3519),
                            Name = "Battery",
                            PerformerId = "93907019-2005-43c1-9286-d5c8fbb7546c"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "b5b87537-d4d2-4728-a593-8a3d5032ee6a",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 644, DateTimeKind.Local).AddTicks(575),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "Moderator",
                            Username = "George"
                        },
                        new
                        {
                            Id = "dc8f489d-bd9a-4c51-8b9a-610350696793",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 645, DateTimeKind.Local).AddTicks(8447),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "Admin",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = "712a1c13-8c17-4ef1-9e41-f718bbd1c513",
                            CreatedAt = new DateTime(2021, 1, 23, 22, 27, 10, 645, DateTimeKind.Local).AddTicks(8495),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
