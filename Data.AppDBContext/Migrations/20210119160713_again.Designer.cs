// <auto-generated />
using System;
using Data.AppDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.AppDBContext.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210119160713_again")]
    partial class again
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("YearReleased")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = "bcac5c44-8ee8-445a-a20e-7ca019f5fc09",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(6081),
                            Name = "Ride The Lightning",
                            PerformerId = "4bf462ad-9d49-4247-ac1a-f1ec96a09236",
                            YearReleased = 1984
                        },
                        new
                        {
                            Id = "c1555908-4197-45d4-878c-890821680fbf",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(6173),
                            Name = "Master Of Puppets",
                            PerformerId = "4bf462ad-9d49-4247-ac1a-f1ec96a09236",
                            YearReleased = 1986
                        },
                        new
                        {
                            Id = "428e0beb-a2e4-4da8-8804-4c94f65f8fd1",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(6217),
                            Name = "Fear Of The Dark",
                            PerformerId = "7134acb2-a5b9-4f7b-8777-369ec68ce9b8",
                            YearReleased = 1992
                        },
                        new
                        {
                            Id = "5119d494-5a39-4935-a2c5-4b97cecedb05",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(6224),
                            Name = "Meteora",
                            PerformerId = "1b30d878-2502-43cf-8b83-70043cd580e9",
                            YearReleased = 2003
                        });
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("GenreId");

                    b.ToTable("AlbumGenres");

                    b.HasData(
                        new
                        {
                            Id = "19bb32f2-a84a-4ff0-babb-a87b53758d6e",
                            AlbumId = "bcac5c44-8ee8-445a-a20e-7ca019f5fc09",
                            GenreId = "3dbaf9f0-3fec-42a4-81a8-fd30ea99b09f"
                        },
                        new
                        {
                            Id = "940f161e-bc4a-4e2c-8fb9-6c2403bc35f8",
                            AlbumId = "c1555908-4197-45d4-878c-890821680fbf",
                            GenreId = "e187793f-e7aa-43f8-bfab-47a8b7185b85"
                        },
                        new
                        {
                            Id = "9fc98e6c-e8d2-4270-8e5e-495d8cee773a",
                            AlbumId = "428e0beb-a2e4-4da8-8804-4c94f65f8fd1",
                            GenreId = "3dbaf9f0-3fec-42a4-81a8-fd30ea99b09f"
                        },
                        new
                        {
                            Id = "564d3eaa-a410-4753-89be-acac5b6bfd93",
                            AlbumId = "5119d494-5a39-4935-a2c5-4b97cecedb05",
                            GenreId = "5e022174-faa4-4623-88de-a8d8ead139b5"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");

                    b.HasData(
                        new
                        {
                            Id = "a2008f3a-a249-42c5-bfc5-22f0db868e76",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2371),
                            SongId = "444eb861-26bc-465a-83cb-5cdb97c70d58",
                            UserId = "27c9ffab-70c7-4536-8812-188c6e31522a"
                        },
                        new
                        {
                            Id = "1df25e66-7308-4739-9a69-aecd065c6500",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2436),
                            SongId = "444eb861-26bc-465a-83cb-5cdb97c70d58",
                            UserId = "3d98586a-b3c5-45df-91d9-32d5f284b037"
                        },
                        new
                        {
                            Id = "fcb368e7-5a54-418b-b15f-c1e6335d4c16",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2443),
                            SongId = "66fc1ffd-0809-46c6-a2f2-a346997a6aa6",
                            UserId = "27c9ffab-70c7-4536-8812-188c6e31522a"
                        },
                        new
                        {
                            Id = "5771e95a-ef00-4b53-8155-f7ab5bb18d01",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2450),
                            SongId = "66fc1ffd-0809-46c6-a2f2-a346997a6aa6",
                            UserId = "2062d3eb-df76-461e-896e-28b4edbee221"
                        },
                        new
                        {
                            Id = "215e5761-0fcb-4c3e-9336-32c15dd18ebd",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2453),
                            SongId = "f5875bf1-3e1c-42c3-8fbe-9689e7907779",
                            UserId = "3d98586a-b3c5-45df-91d9-32d5f284b037"
                        },
                        new
                        {
                            Id = "eb4a8ebe-050c-465f-b677-4a44cf3f9770",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2464),
                            SongId = "0f420d41-9ea2-4446-b369-3d05eb6c06e4",
                            UserId = "27c9ffab-70c7-4536-8812-188c6e31522a"
                        },
                        new
                        {
                            Id = "36445957-16f3-44c3-b188-fadda5b0e9db",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2467),
                            SongId = "0f420d41-9ea2-4446-b369-3d05eb6c06e4",
                            UserId = "3d98586a-b3c5-45df-91d9-32d5f284b037"
                        },
                        new
                        {
                            Id = "ecb5ceb2-6c9e-4dfa-bb3c-4a0f2a509448",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 765, DateTimeKind.Local).AddTicks(2474),
                            SongId = "0f420d41-9ea2-4446-b369-3d05eb6c06e4",
                            UserId = "2062d3eb-df76-461e-896e-28b4edbee221"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = "3dbaf9f0-3fec-42a4-81a8-fd30ea99b09f",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(8746),
                            Name = "Metal"
                        },
                        new
                        {
                            Id = "5e022174-faa4-4623-88de-a8d8ead139b5",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(8811),
                            Name = "Nu-Metal"
                        },
                        new
                        {
                            Id = "e187793f-e7aa-43f8-bfab-47a8b7185b85",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(8821),
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = "4bf462ad-9d49-4247-ac1a-f1ec96a09236",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(3599),
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = "7134acb2-a5b9-4f7b-8777-369ec68ce9b8",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(3681),
                            Name = "Iron Maiden"
                        },
                        new
                        {
                            Id = "1b30d878-2502-43cf-8b83-70043cd580e9",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(3691),
                            Name = "Linkin Park"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlbumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = "444eb861-26bc-465a-83cb-5cdb97c70d58",
                            AlbumId = "c1555908-4197-45d4-878c-890821680fbf",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(7808),
                            Name = "Master Of Puppets",
                            PerformerId = "4bf462ad-9d49-4247-ac1a-f1ec96a09236"
                        },
                        new
                        {
                            Id = "66fc1ffd-0809-46c6-a2f2-a346997a6aa6",
                            AlbumId = "5119d494-5a39-4935-a2c5-4b97cecedb05",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(7883),
                            Name = "Numb",
                            PerformerId = "1b30d878-2502-43cf-8b83-70043cd580e9"
                        },
                        new
                        {
                            Id = "f5875bf1-3e1c-42c3-8fbe-9689e7907779",
                            AlbumId = "428e0beb-a2e4-4da8-8804-4c94f65f8fd1",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(7896),
                            Name = "Fear Of The Dark",
                            PerformerId = "7134acb2-a5b9-4f7b-8777-369ec68ce9b8"
                        },
                        new
                        {
                            Id = "0f420d41-9ea2-4446-b369-3d05eb6c06e4",
                            AlbumId = "bcac5c44-8ee8-445a-a20e-7ca019f5fc09",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(7907),
                            Name = "For Whom The Bell Tolls",
                            PerformerId = "4bf462ad-9d49-4247-ac1a-f1ec96a09236"
                        },
                        new
                        {
                            Id = "2505c808-85d3-4179-9b11-34b378824317",
                            AlbumId = "c1555908-4197-45d4-878c-890821680fbf",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(7914),
                            Name = "Battery",
                            PerformerId = "4bf462ad-9d49-4247-ac1a-f1ec96a09236"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "27c9ffab-70c7-4536-8812-188c6e31522a",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 762, DateTimeKind.Local).AddTicks(4983),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "George"
                        },
                        new
                        {
                            Id = "3d98586a-b3c5-45df-91d9-32d5f284b037",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(2473),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "Admin",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = "2062d3eb-df76-461e-896e-28b4edbee221",
                            CreatedAt = new DateTime(2021, 1, 19, 18, 7, 12, 764, DateTimeKind.Local).AddTicks(2517),
                            Password = "havHcBwB/HJMHdkrqDZJPUixI7JqFX5DBzeLyfR2GPkRAlTb0oZ6WffOhY9S4L2LtK7a+C6LJ4Ry6ErSS7f2vw==",
                            Role = "User",
                            Username = "Jake"
                        });
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Albums")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.AlbumGenre", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Genre", "Genre")
                        .WithMany("AlbumGenres")
                        .HasForeignKey("GenreId");

                    b.Navigation("Album");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Models.Models.Favourite", b =>
                {
                    b.HasOne("Data.Models.Models.Song", "Song")
                        .WithMany("Favourites")
                        .HasForeignKey("SongId");

                    b.HasOne("Data.Models.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Song");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.HasOne("Data.Models.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("Data.Models.Models.Performer", "Performer")
                        .WithMany("Songs")
                        .HasForeignKey("PerformerId");

                    b.Navigation("Album");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("Data.Models.Models.Album", b =>
                {
                    b.Navigation("AlbumGenres");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Genre", b =>
                {
                    b.Navigation("AlbumGenres");
                });

            modelBuilder.Entity("Data.Models.Models.Performer", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Data.Models.Models.Song", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
